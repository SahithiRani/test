Terminals unused in grammar

    ELIF


Grammar

    0 $accept: program $end

    1 program: items_list
    2        | error

    3 items_list: item items_list
    4           | %empty

    5 item: function
    6     | stmt

    7 function: FUNC function_name '{' stmts_list '}'

    8 function_name: data_type ID '(' params ')'

    9 params: param_list
   10       | %empty

   11 param_list: param_list ',' param
   12           | param

   13 param: data_type ID arrayBRACKETS

   14 arrayBRACKETS: arrayBRACKETS '[' INT_CONST ']'
   15              | %empty

   16 stmts_list: stmt stmts_list
   17           | %empty

   18 stmt: withSemcol ';'
   19     | withoutSemcol

   20 withSemcol: DECLARATION
   21           | assign_stmt
   22           | return_stmt
   23           | func_call
   24           | BREAK
   25           | CONTINUE
   26           | printSTMT

   27 withoutSemcol: loop
   28              | conditional

   29 DECLARATION: data_type id_LIST

   30 id_LIST: oneID ',' id_LIST
   31        | oneID

   32 oneID: ID arr_optional_assign

   33 arr_optional_assign: arrayBRACKETS
   34                    | opt_assign

   35 opt_assign: ASSIGN expr

   36 assign_stmt: LHS ASSIGN RHS

   37 LHS: ID isARRAY

   38 isARRAY: arrayBRACKETS

   39 RHS: expr
   40    | SCAN '(' data_type ')'

   41 return_stmt: RETURN expr

   42 printSTMT: PRINT '(' printables ')'

   43 printables: printables '+' printable
   44           | printable

   45 printable: STR_CONST
   46          | LHS

   47 func_call: ID '(' args_list ')'

   48 args_list: args
   49          | %empty

   50 args: args ',' expr
   51     | expr

   52 expr: expr op value
   53     | value

   54 value: func_call
   55      | constant
   56      | LHS
   57      | '(' expr ')'

   58 loop: LOOP '(' conditions ')' '{' stmts_list '}'

   59 conditional: IF '(' conditions ')' '{' stmts_list '}' else_stmt

   60 else_stmt: ELSE '{' stmts_list '}'
   61          | %empty

   62 conditions: boolean
   63           | boolean bi_logic_OP conditions
   64           | NOT conditions

   65 boolean: boolean rel_op expr
   66        | expr

   67 data_type: INT
   68          | BOOLEAN
   69          | CHAR
   70          | DOUBLE
   71          | VOID

   72 op: ADD
   73   | SUB
   74   | MUL
   75   | DIV

   76 rel_op: LTE
   77       | GTE
   78       | '<'
   79       | '>'
   80       | EQ
   81       | NEQ

   82 bi_logic_OP: AND
   83            | OR
   84            | XOR

   85 constant: INT_CONST
   86         | SUB INT_CONST
   87         | STR_CONST
   88         | BOOL_CONST
   89         | FLOAT_CONST
   90         | SUB FLOAT_CONST


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 8 40 42 47 57 58 59
    ')' (41) 8 40 42 47 57 58 59
    '+' (43) 43
    ',' (44) 11 30 50
    ';' (59) 18
    '<' (60) 78
    '>' (62) 79
    '[' (91) 14
    ']' (93) 14
    '{' (123) 7 58 59 60
    '}' (125) 7 58 59 60
    error (256) 2
    ADD (258) 72
    SUB (259) 73 86 90
    MUL (260) 74
    DIV (261) 75
    ASSIGN (262) 35 36
    AND (263) 82
    OR (264) 83
    XOR (265) 84
    LTE (266) 76
    GTE (267) 77
    EQ (268) 80
    NEQ (269) 81
    NOT (270) 64
    INT_CONST <yint> (271) 14 85 86
    BOOL_CONST <yint> (272) 88
    FLOAT_CONST <ydou> (273) 89 90
    STR_CONST <ystr> (274) 45 87
    ID <ystr> (275) 8 13 32 37 47
    IF (276) 59
    ELSE (277) 60
    ELIF (278)
    LOOP (279) 58
    VOID (280) 71
    INT (281) 67
    DOUBLE (282) 70
    BOOLEAN (283) 68
    CHAR (284) 69
    BREAK (285) 24
    PRINT (286) 42
    SCAN (287) 40
    FUNC (288) 7
    RETURN (289) 41
    CONTINUE (290) 25


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    program (48)
        on left: 1 2
        on right: 0
    items_list (49)
        on left: 3 4
        on right: 1 3
    item (50)
        on left: 5 6
        on right: 3
    function (51)
        on left: 7
        on right: 5
    function_name (52)
        on left: 8
        on right: 7
    params (53)
        on left: 9 10
        on right: 8
    param_list (54)
        on left: 11 12
        on right: 9 11
    param (55)
        on left: 13
        on right: 11 12
    arrayBRACKETS (56)
        on left: 14 15
        on right: 13 14 33 38
    stmts_list (57)
        on left: 16 17
        on right: 7 16 58 59 60
    stmt (58)
        on left: 18 19
        on right: 6 16
    withSemcol (59)
        on left: 20 21 22 23 24 25 26
        on right: 18
    withoutSemcol (60)
        on left: 27 28
        on right: 19
    DECLARATION (61)
        on left: 29
        on right: 20
    id_LIST (62)
        on left: 30 31
        on right: 29 30
    oneID (63)
        on left: 32
        on right: 30 31
    arr_optional_assign (64)
        on left: 33 34
        on right: 32
    opt_assign (65)
        on left: 35
        on right: 34
    assign_stmt (66)
        on left: 36
        on right: 21
    LHS (67)
        on left: 37
        on right: 36 46 56
    isARRAY (68)
        on left: 38
        on right: 37
    RHS (69)
        on left: 39 40
        on right: 36
    return_stmt (70)
        on left: 41
        on right: 22
    printSTMT (71)
        on left: 42
        on right: 26
    printables (72)
        on left: 43 44
        on right: 42 43
    printable (73)
        on left: 45 46
        on right: 43 44
    func_call (74)
        on left: 47
        on right: 23 54
    args_list (75)
        on left: 48 49
        on right: 47
    args (76)
        on left: 50 51
        on right: 48 50
    expr (77)
        on left: 52 53
        on right: 35 39 41 50 51 52 57 65 66
    value (78)
        on left: 54 55 56 57
        on right: 52 53
    loop (79)
        on left: 58
        on right: 27
    conditional (80)
        on left: 59
        on right: 28
    else_stmt (81)
        on left: 60 61
        on right: 59
    conditions (82)
        on left: 62 63 64
        on right: 58 59 63 64
    boolean (83)
        on left: 65 66
        on right: 62 63 65
    data_type (84)
        on left: 67 68 69 70 71
        on right: 8 13 29 40
    op (85)
        on left: 72 73 74 75
        on right: 52
    rel_op (86)
        on left: 76 77 78 79 80 81
        on right: 65
    bi_logic_OP (87)
        on left: 82 83 84
        on right: 63
    constant (88)
        on left: 85 86 87 88 89 90
        on right: 55


State 0

    0 $accept: • program $end

    error     shift, and go to state 1
    ID        shift, and go to state 2
    IF        shift, and go to state 3
    LOOP      shift, and go to state 4
    VOID      shift, and go to state 5
    INT       shift, and go to state 6
    DOUBLE    shift, and go to state 7
    BOOLEAN   shift, and go to state 8
    CHAR      shift, and go to state 9
    BREAK     shift, and go to state 10
    PRINT     shift, and go to state 11
    FUNC      shift, and go to state 12
    RETURN    shift, and go to state 13
    CONTINUE  shift, and go to state 14

    $end  reduce using rule 4 (items_list)

    program        go to state 15
    items_list     go to state 16
    item           go to state 17
    function       go to state 18
    stmt           go to state 19
    withSemcol     go to state 20
    withoutSemcol  go to state 21
    DECLARATION    go to state 22
    assign_stmt    go to state 23
    LHS            go to state 24
    return_stmt    go to state 25
    printSTMT      go to state 26
    func_call      go to state 27
    loop           go to state 28
    conditional    go to state 29
    data_type      go to state 30


State 1

    2 program: error •

    $default  reduce using rule 2 (program)


State 2

   37 LHS: ID • isARRAY
   47 func_call: ID • '(' args_list ')'

    '('  shift, and go to state 31

    $default  reduce using rule 15 (arrayBRACKETS)

    arrayBRACKETS  go to state 32
    isARRAY        go to state 33


State 3

   59 conditional: IF • '(' conditions ')' '{' stmts_list '}' else_stmt

    '('  shift, and go to state 34


State 4

   58 loop: LOOP • '(' conditions ')' '{' stmts_list '}'

    '('  shift, and go to state 35


State 5

   71 data_type: VOID •

    $default  reduce using rule 71 (data_type)


State 6

   67 data_type: INT •

    $default  reduce using rule 67 (data_type)


State 7

   70 data_type: DOUBLE •

    $default  reduce using rule 70 (data_type)


State 8

   68 data_type: BOOLEAN •

    $default  reduce using rule 68 (data_type)


State 9

   69 data_type: CHAR •

    $default  reduce using rule 69 (data_type)


State 10

   24 withSemcol: BREAK •

    $default  reduce using rule 24 (withSemcol)


State 11

   42 printSTMT: PRINT • '(' printables ')'

    '('  shift, and go to state 36


State 12

    7 function: FUNC • function_name '{' stmts_list '}'

    VOID     shift, and go to state 5
    INT      shift, and go to state 6
    DOUBLE   shift, and go to state 7
    BOOLEAN  shift, and go to state 8
    CHAR     shift, and go to state 9

    function_name  go to state 37
    data_type      go to state 38


State 13

   41 return_stmt: RETURN • expr

    SUB          shift, and go to state 39
    INT_CONST    shift, and go to state 40
    BOOL_CONST   shift, and go to state 41
    FLOAT_CONST  shift, and go to state 42
    STR_CONST    shift, and go to state 43
    ID           shift, and go to state 2
    '('          shift, and go to state 44

    LHS        go to state 45
    func_call  go to state 46
    expr       go to state 47
    value      go to state 48
    constant   go to state 49


State 14

   25 withSemcol: CONTINUE •

    $default  reduce using rule 25 (withSemcol)


State 15

    0 $accept: program • $end

    $end  shift, and go to state 50


State 16

    1 program: items_list •

    $default  reduce using rule 1 (program)


State 17

    3 items_list: item • items_list

    ID        shift, and go to state 2
    IF        shift, and go to state 3
    LOOP      shift, and go to state 4
    VOID      shift, and go to state 5
    INT       shift, and go to state 6
    DOUBLE    shift, and go to state 7
    BOOLEAN   shift, and go to state 8
    CHAR      shift, and go to state 9
    BREAK     shift, and go to state 10
    PRINT     shift, and go to state 11
    FUNC      shift, and go to state 12
    RETURN    shift, and go to state 13
    CONTINUE  shift, and go to state 14

    $default  reduce using rule 4 (items_list)

    items_list     go to state 51
    item           go to state 17
    function       go to state 18
    stmt           go to state 19
    withSemcol     go to state 20
    withoutSemcol  go to state 21
    DECLARATION    go to state 22
    assign_stmt    go to state 23
    LHS            go to state 24
    return_stmt    go to state 25
    printSTMT      go to state 26
    func_call      go to state 27
    loop           go to state 28
    conditional    go to state 29
    data_type      go to state 30


State 18

    5 item: function •

    $default  reduce using rule 5 (item)


State 19

    6 item: stmt •

    $default  reduce using rule 6 (item)


State 20

   18 stmt: withSemcol • ';'

    ';'  shift, and go to state 52


State 21

   19 stmt: withoutSemcol •

    $default  reduce using rule 19 (stmt)


State 22

   20 withSemcol: DECLARATION •

    $default  reduce using rule 20 (withSemcol)


State 23

   21 withSemcol: assign_stmt •

    $default  reduce using rule 21 (withSemcol)


State 24

   36 assign_stmt: LHS • ASSIGN RHS

    ASSIGN  shift, and go to state 53


State 25

   22 withSemcol: return_stmt •

    $default  reduce using rule 22 (withSemcol)


State 26

   26 withSemcol: printSTMT •

    $default  reduce using rule 26 (withSemcol)


State 27

   23 withSemcol: func_call •

    $default  reduce using rule 23 (withSemcol)


State 28

   27 withoutSemcol: loop •

    $default  reduce using rule 27 (withoutSemcol)


State 29

   28 withoutSemcol: conditional •

    $default  reduce using rule 28 (withoutSemcol)


State 30

   29 DECLARATION: data_type • id_LIST

    ID  shift, and go to state 54

    id_LIST  go to state 55
    oneID    go to state 56


State 31

   47 func_call: ID '(' • args_list ')'

    SUB          shift, and go to state 39
    INT_CONST    shift, and go to state 40
    BOOL_CONST   shift, and go to state 41
    FLOAT_CONST  shift, and go to state 42
    STR_CONST    shift, and go to state 43
    ID           shift, and go to state 2
    '('          shift, and go to state 44

    $default  reduce using rule 49 (args_list)

    LHS        go to state 45
    func_call  go to state 46
    args_list  go to state 57
    args       go to state 58
    expr       go to state 59
    value      go to state 48
    constant   go to state 49


State 32

   14 arrayBRACKETS: arrayBRACKETS • '[' INT_CONST ']'
   38 isARRAY: arrayBRACKETS •

    '['  shift, and go to state 60

    $default  reduce using rule 38 (isARRAY)


State 33

   37 LHS: ID isARRAY •

    $default  reduce using rule 37 (LHS)


State 34

   59 conditional: IF '(' • conditions ')' '{' stmts_list '}' else_stmt

    SUB          shift, and go to state 39
    NOT          shift, and go to state 61
    INT_CONST    shift, and go to state 40
    BOOL_CONST   shift, and go to state 41
    FLOAT_CONST  shift, and go to state 42
    STR_CONST    shift, and go to state 43
    ID           shift, and go to state 2
    '('          shift, and go to state 44

    LHS         go to state 45
    func_call   go to state 46
    expr        go to state 62
    value       go to state 48
    conditions  go to state 63
    boolean     go to state 64
    constant    go to state 49


State 35

   58 loop: LOOP '(' • conditions ')' '{' stmts_list '}'

    SUB          shift, and go to state 39
    NOT          shift, and go to state 61
    INT_CONST    shift, and go to state 40
    BOOL_CONST   shift, and go to state 41
    FLOAT_CONST  shift, and go to state 42
    STR_CONST    shift, and go to state 43
    ID           shift, and go to state 2
    '('          shift, and go to state 44

    LHS         go to state 45
    func_call   go to state 46
    expr        go to state 62
    value       go to state 48
    conditions  go to state 65
    boolean     go to state 64
    constant    go to state 49


State 36

   42 printSTMT: PRINT '(' • printables ')'

    STR_CONST  shift, and go to state 66
    ID         shift, and go to state 67

    LHS         go to state 68
    printables  go to state 69
    printable   go to state 70


State 37

    7 function: FUNC function_name • '{' stmts_list '}'

    '{'  shift, and go to state 71


State 38

    8 function_name: data_type • ID '(' params ')'

    ID  shift, and go to state 72


State 39

   86 constant: SUB • INT_CONST
   90         | SUB • FLOAT_CONST

    INT_CONST    shift, and go to state 73
    FLOAT_CONST  shift, and go to state 74


State 40

   85 constant: INT_CONST •

    $default  reduce using rule 85 (constant)


State 41

   88 constant: BOOL_CONST •

    $default  reduce using rule 88 (constant)


State 42

   89 constant: FLOAT_CONST •

    $default  reduce using rule 89 (constant)


State 43

   87 constant: STR_CONST •

    $default  reduce using rule 87 (constant)


State 44

   57 value: '(' • expr ')'

    SUB          shift, and go to state 39
    INT_CONST    shift, and go to state 40
    BOOL_CONST   shift, and go to state 41
    FLOAT_CONST  shift, and go to state 42
    STR_CONST    shift, and go to state 43
    ID           shift, and go to state 2
    '('          shift, and go to state 44

    LHS        go to state 45
    func_call  go to state 46
    expr       go to state 75
    value      go to state 48
    constant   go to state 49


State 45

   56 value: LHS •

    $default  reduce using rule 56 (value)


State 46

   54 value: func_call •

    $default  reduce using rule 54 (value)


State 47

   41 return_stmt: RETURN expr •
   52 expr: expr • op value

    ADD  shift, and go to state 76
    SUB  shift, and go to state 77
    MUL  shift, and go to state 78
    DIV  shift, and go to state 79

    $default  reduce using rule 41 (return_stmt)

    op  go to state 80


State 48

   53 expr: value •

    $default  reduce using rule 53 (expr)


State 49

   55 value: constant •

    $default  reduce using rule 55 (value)


State 50

    0 $accept: program $end •

    $default  accept


State 51

    3 items_list: item items_list •

    $default  reduce using rule 3 (items_list)


State 52

   18 stmt: withSemcol ';' •

    $default  reduce using rule 18 (stmt)


State 53

   36 assign_stmt: LHS ASSIGN • RHS

    SUB          shift, and go to state 39
    INT_CONST    shift, and go to state 40
    BOOL_CONST   shift, and go to state 41
    FLOAT_CONST  shift, and go to state 42
    STR_CONST    shift, and go to state 43
    ID           shift, and go to state 2
    SCAN         shift, and go to state 81
    '('          shift, and go to state 44

    LHS        go to state 45
    RHS        go to state 82
    func_call  go to state 46
    expr       go to state 83
    value      go to state 48
    constant   go to state 49


State 54

   32 oneID: ID • arr_optional_assign

    ASSIGN  shift, and go to state 84

    $default  reduce using rule 15 (arrayBRACKETS)

    arrayBRACKETS        go to state 85
    arr_optional_assign  go to state 86
    opt_assign           go to state 87


State 55

   29 DECLARATION: data_type id_LIST •

    $default  reduce using rule 29 (DECLARATION)


State 56

   30 id_LIST: oneID • ',' id_LIST
   31        | oneID •

    ','  shift, and go to state 88

    $default  reduce using rule 31 (id_LIST)


State 57

   47 func_call: ID '(' args_list • ')'

    ')'  shift, and go to state 89


State 58

   48 args_list: args •
   50 args: args • ',' expr

    ','  shift, and go to state 90

    $default  reduce using rule 48 (args_list)


State 59

   51 args: expr •
   52 expr: expr • op value

    ADD  shift, and go to state 76
    SUB  shift, and go to state 77
    MUL  shift, and go to state 78
    DIV  shift, and go to state 79

    $default  reduce using rule 51 (args)

    op  go to state 80


State 60

   14 arrayBRACKETS: arrayBRACKETS '[' • INT_CONST ']'

    INT_CONST  shift, and go to state 91


State 61

   64 conditions: NOT • conditions

    SUB          shift, and go to state 39
    NOT          shift, and go to state 61
    INT_CONST    shift, and go to state 40
    BOOL_CONST   shift, and go to state 41
    FLOAT_CONST  shift, and go to state 42
    STR_CONST    shift, and go to state 43
    ID           shift, and go to state 2
    '('          shift, and go to state 44

    LHS         go to state 45
    func_call   go to state 46
    expr        go to state 62
    value       go to state 48
    conditions  go to state 92
    boolean     go to state 64
    constant    go to state 49


State 62

   52 expr: expr • op value
   66 boolean: expr •

    ADD  shift, and go to state 76
    SUB  shift, and go to state 77
    MUL  shift, and go to state 78
    DIV  shift, and go to state 79

    $default  reduce using rule 66 (boolean)

    op  go to state 80


State 63

   59 conditional: IF '(' conditions • ')' '{' stmts_list '}' else_stmt

    ')'  shift, and go to state 93


State 64

   62 conditions: boolean •
   63           | boolean • bi_logic_OP conditions
   65 boolean: boolean • rel_op expr

    AND  shift, and go to state 94
    OR   shift, and go to state 95
    XOR  shift, and go to state 96
    LTE  shift, and go to state 97
    GTE  shift, and go to state 98
    EQ   shift, and go to state 99
    NEQ  shift, and go to state 100
    '<'  shift, and go to state 101
    '>'  shift, and go to state 102

    $default  reduce using rule 62 (conditions)

    rel_op       go to state 103
    bi_logic_OP  go to state 104


State 65

   58 loop: LOOP '(' conditions • ')' '{' stmts_list '}'

    ')'  shift, and go to state 105


State 66

   45 printable: STR_CONST •

    $default  reduce using rule 45 (printable)


State 67

   37 LHS: ID • isARRAY

    $default  reduce using rule 15 (arrayBRACKETS)

    arrayBRACKETS  go to state 32
    isARRAY        go to state 33


State 68

   46 printable: LHS •

    $default  reduce using rule 46 (printable)


State 69

   42 printSTMT: PRINT '(' printables • ')'
   43 printables: printables • '+' printable

    ')'  shift, and go to state 106
    '+'  shift, and go to state 107


State 70

   44 printables: printable •

    $default  reduce using rule 44 (printables)


State 71

    7 function: FUNC function_name '{' • stmts_list '}'

    ID        shift, and go to state 2
    IF        shift, and go to state 3
    LOOP      shift, and go to state 4
    VOID      shift, and go to state 5
    INT       shift, and go to state 6
    DOUBLE    shift, and go to state 7
    BOOLEAN   shift, and go to state 8
    CHAR      shift, and go to state 9
    BREAK     shift, and go to state 10
    PRINT     shift, and go to state 11
    RETURN    shift, and go to state 13
    CONTINUE  shift, and go to state 14

    $default  reduce using rule 17 (stmts_list)

    stmts_list     go to state 108
    stmt           go to state 109
    withSemcol     go to state 20
    withoutSemcol  go to state 21
    DECLARATION    go to state 22
    assign_stmt    go to state 23
    LHS            go to state 24
    return_stmt    go to state 25
    printSTMT      go to state 26
    func_call      go to state 27
    loop           go to state 28
    conditional    go to state 29
    data_type      go to state 30


State 72

    8 function_name: data_type ID • '(' params ')'

    '('  shift, and go to state 110


State 73

   86 constant: SUB INT_CONST •

    $default  reduce using rule 86 (constant)


State 74

   90 constant: SUB FLOAT_CONST •

    $default  reduce using rule 90 (constant)


State 75

   52 expr: expr • op value
   57 value: '(' expr • ')'

    ADD  shift, and go to state 76
    SUB  shift, and go to state 77
    MUL  shift, and go to state 78
    DIV  shift, and go to state 79
    ')'  shift, and go to state 111

    op  go to state 80


State 76

   72 op: ADD •

    $default  reduce using rule 72 (op)


State 77

   73 op: SUB •

    $default  reduce using rule 73 (op)


State 78

   74 op: MUL •

    $default  reduce using rule 74 (op)


State 79

   75 op: DIV •

    $default  reduce using rule 75 (op)


State 80

   52 expr: expr op • value

    SUB          shift, and go to state 39
    INT_CONST    shift, and go to state 40
    BOOL_CONST   shift, and go to state 41
    FLOAT_CONST  shift, and go to state 42
    STR_CONST    shift, and go to state 43
    ID           shift, and go to state 2
    '('          shift, and go to state 44

    LHS        go to state 45
    func_call  go to state 46
    value      go to state 112
    constant   go to state 49


State 81

   40 RHS: SCAN • '(' data_type ')'

    '('  shift, and go to state 113


State 82

   36 assign_stmt: LHS ASSIGN RHS •

    $default  reduce using rule 36 (assign_stmt)


State 83

   39 RHS: expr •
   52 expr: expr • op value

    ADD  shift, and go to state 76
    SUB  shift, and go to state 77
    MUL  shift, and go to state 78
    DIV  shift, and go to state 79

    $default  reduce using rule 39 (RHS)

    op  go to state 80


State 84

   35 opt_assign: ASSIGN • expr

    SUB          shift, and go to state 39
    INT_CONST    shift, and go to state 40
    BOOL_CONST   shift, and go to state 41
    FLOAT_CONST  shift, and go to state 42
    STR_CONST    shift, and go to state 43
    ID           shift, and go to state 2
    '('          shift, and go to state 44

    LHS        go to state 45
    func_call  go to state 46
    expr       go to state 114
    value      go to state 48
    constant   go to state 49


State 85

   14 arrayBRACKETS: arrayBRACKETS • '[' INT_CONST ']'
   33 arr_optional_assign: arrayBRACKETS •

    '['  shift, and go to state 60

    $default  reduce using rule 33 (arr_optional_assign)


State 86

   32 oneID: ID arr_optional_assign •

    $default  reduce using rule 32 (oneID)


State 87

   34 arr_optional_assign: opt_assign •

    $default  reduce using rule 34 (arr_optional_assign)


State 88

   30 id_LIST: oneID ',' • id_LIST

    ID  shift, and go to state 54

    id_LIST  go to state 115
    oneID    go to state 56


State 89

   47 func_call: ID '(' args_list ')' •

    $default  reduce using rule 47 (func_call)


State 90

   50 args: args ',' • expr

    SUB          shift, and go to state 39
    INT_CONST    shift, and go to state 40
    BOOL_CONST   shift, and go to state 41
    FLOAT_CONST  shift, and go to state 42
    STR_CONST    shift, and go to state 43
    ID           shift, and go to state 2
    '('          shift, and go to state 44

    LHS        go to state 45
    func_call  go to state 46
    expr       go to state 116
    value      go to state 48
    constant   go to state 49


State 91

   14 arrayBRACKETS: arrayBRACKETS '[' INT_CONST • ']'

    ']'  shift, and go to state 117


State 92

   64 conditions: NOT conditions •

    $default  reduce using rule 64 (conditions)


State 93

   59 conditional: IF '(' conditions ')' • '{' stmts_list '}' else_stmt

    '{'  shift, and go to state 118


State 94

   82 bi_logic_OP: AND •

    $default  reduce using rule 82 (bi_logic_OP)


State 95

   83 bi_logic_OP: OR •

    $default  reduce using rule 83 (bi_logic_OP)


State 96

   84 bi_logic_OP: XOR •

    $default  reduce using rule 84 (bi_logic_OP)


State 97

   76 rel_op: LTE •

    $default  reduce using rule 76 (rel_op)


State 98

   77 rel_op: GTE •

    $default  reduce using rule 77 (rel_op)


State 99

   80 rel_op: EQ •

    $default  reduce using rule 80 (rel_op)


State 100

   81 rel_op: NEQ •

    $default  reduce using rule 81 (rel_op)


State 101

   78 rel_op: '<' •

    $default  reduce using rule 78 (rel_op)


State 102

   79 rel_op: '>' •

    $default  reduce using rule 79 (rel_op)


State 103

   65 boolean: boolean rel_op • expr

    SUB          shift, and go to state 39
    INT_CONST    shift, and go to state 40
    BOOL_CONST   shift, and go to state 41
    FLOAT_CONST  shift, and go to state 42
    STR_CONST    shift, and go to state 43
    ID           shift, and go to state 2
    '('          shift, and go to state 44

    LHS        go to state 45
    func_call  go to state 46
    expr       go to state 119
    value      go to state 48
    constant   go to state 49


State 104

   63 conditions: boolean bi_logic_OP • conditions

    SUB          shift, and go to state 39
    NOT          shift, and go to state 61
    INT_CONST    shift, and go to state 40
    BOOL_CONST   shift, and go to state 41
    FLOAT_CONST  shift, and go to state 42
    STR_CONST    shift, and go to state 43
    ID           shift, and go to state 2
    '('          shift, and go to state 44

    LHS         go to state 45
    func_call   go to state 46
    expr        go to state 62
    value       go to state 48
    conditions  go to state 120
    boolean     go to state 64
    constant    go to state 49


State 105

   58 loop: LOOP '(' conditions ')' • '{' stmts_list '}'

    '{'  shift, and go to state 121


State 106

   42 printSTMT: PRINT '(' printables ')' •

    $default  reduce using rule 42 (printSTMT)


State 107

   43 printables: printables '+' • printable

    STR_CONST  shift, and go to state 66
    ID         shift, and go to state 67

    LHS        go to state 68
    printable  go to state 122


State 108

    7 function: FUNC function_name '{' stmts_list • '}'

    '}'  shift, and go to state 123


State 109

   16 stmts_list: stmt • stmts_list

    ID        shift, and go to state 2
    IF        shift, and go to state 3
    LOOP      shift, and go to state 4
    VOID      shift, and go to state 5
    INT       shift, and go to state 6
    DOUBLE    shift, and go to state 7
    BOOLEAN   shift, and go to state 8
    CHAR      shift, and go to state 9
    BREAK     shift, and go to state 10
    PRINT     shift, and go to state 11
    RETURN    shift, and go to state 13
    CONTINUE  shift, and go to state 14

    $default  reduce using rule 17 (stmts_list)

    stmts_list     go to state 124
    stmt           go to state 109
    withSemcol     go to state 20
    withoutSemcol  go to state 21
    DECLARATION    go to state 22
    assign_stmt    go to state 23
    LHS            go to state 24
    return_stmt    go to state 25
    printSTMT      go to state 26
    func_call      go to state 27
    loop           go to state 28
    conditional    go to state 29
    data_type      go to state 30


State 110

    8 function_name: data_type ID '(' • params ')'

    VOID     shift, and go to state 5
    INT      shift, and go to state 6
    DOUBLE   shift, and go to state 7
    BOOLEAN  shift, and go to state 8
    CHAR     shift, and go to state 9

    $default  reduce using rule 10 (params)

    params      go to state 125
    param_list  go to state 126
    param       go to state 127
    data_type   go to state 128


State 111

   57 value: '(' expr ')' •

    $default  reduce using rule 57 (value)


State 112

   52 expr: expr op value •

    $default  reduce using rule 52 (expr)


State 113

   40 RHS: SCAN '(' • data_type ')'

    VOID     shift, and go to state 5
    INT      shift, and go to state 6
    DOUBLE   shift, and go to state 7
    BOOLEAN  shift, and go to state 8
    CHAR     shift, and go to state 9

    data_type  go to state 129


State 114

   35 opt_assign: ASSIGN expr •
   52 expr: expr • op value

    ADD  shift, and go to state 76
    SUB  shift, and go to state 77
    MUL  shift, and go to state 78
    DIV  shift, and go to state 79

    $default  reduce using rule 35 (opt_assign)

    op  go to state 80


State 115

   30 id_LIST: oneID ',' id_LIST •

    $default  reduce using rule 30 (id_LIST)


State 116

   50 args: args ',' expr •
   52 expr: expr • op value

    ADD  shift, and go to state 76
    SUB  shift, and go to state 77
    MUL  shift, and go to state 78
    DIV  shift, and go to state 79

    $default  reduce using rule 50 (args)

    op  go to state 80


State 117

   14 arrayBRACKETS: arrayBRACKETS '[' INT_CONST ']' •

    $default  reduce using rule 14 (arrayBRACKETS)


State 118

   59 conditional: IF '(' conditions ')' '{' • stmts_list '}' else_stmt

    ID        shift, and go to state 2
    IF        shift, and go to state 3
    LOOP      shift, and go to state 4
    VOID      shift, and go to state 5
    INT       shift, and go to state 6
    DOUBLE    shift, and go to state 7
    BOOLEAN   shift, and go to state 8
    CHAR      shift, and go to state 9
    BREAK     shift, and go to state 10
    PRINT     shift, and go to state 11
    RETURN    shift, and go to state 13
    CONTINUE  shift, and go to state 14

    $default  reduce using rule 17 (stmts_list)

    stmts_list     go to state 130
    stmt           go to state 109
    withSemcol     go to state 20
    withoutSemcol  go to state 21
    DECLARATION    go to state 22
    assign_stmt    go to state 23
    LHS            go to state 24
    return_stmt    go to state 25
    printSTMT      go to state 26
    func_call      go to state 27
    loop           go to state 28
    conditional    go to state 29
    data_type      go to state 30


State 119

   52 expr: expr • op value
   65 boolean: boolean rel_op expr •

    ADD  shift, and go to state 76
    SUB  shift, and go to state 77
    MUL  shift, and go to state 78
    DIV  shift, and go to state 79

    $default  reduce using rule 65 (boolean)

    op  go to state 80


State 120

   63 conditions: boolean bi_logic_OP conditions •

    $default  reduce using rule 63 (conditions)


State 121

   58 loop: LOOP '(' conditions ')' '{' • stmts_list '}'

    ID        shift, and go to state 2
    IF        shift, and go to state 3
    LOOP      shift, and go to state 4
    VOID      shift, and go to state 5
    INT       shift, and go to state 6
    DOUBLE    shift, and go to state 7
    BOOLEAN   shift, and go to state 8
    CHAR      shift, and go to state 9
    BREAK     shift, and go to state 10
    PRINT     shift, and go to state 11
    RETURN    shift, and go to state 13
    CONTINUE  shift, and go to state 14

    $default  reduce using rule 17 (stmts_list)

    stmts_list     go to state 131
    stmt           go to state 109
    withSemcol     go to state 20
    withoutSemcol  go to state 21
    DECLARATION    go to state 22
    assign_stmt    go to state 23
    LHS            go to state 24
    return_stmt    go to state 25
    printSTMT      go to state 26
    func_call      go to state 27
    loop           go to state 28
    conditional    go to state 29
    data_type      go to state 30


State 122

   43 printables: printables '+' printable •

    $default  reduce using rule 43 (printables)


State 123

    7 function: FUNC function_name '{' stmts_list '}' •

    $default  reduce using rule 7 (function)


State 124

   16 stmts_list: stmt stmts_list •

    $default  reduce using rule 16 (stmts_list)


State 125

    8 function_name: data_type ID '(' params • ')'

    ')'  shift, and go to state 132


State 126

    9 params: param_list •
   11 param_list: param_list • ',' param

    ','  shift, and go to state 133

    $default  reduce using rule 9 (params)


State 127

   12 param_list: param •

    $default  reduce using rule 12 (param_list)


State 128

   13 param: data_type • ID arrayBRACKETS

    ID  shift, and go to state 134


State 129

   40 RHS: SCAN '(' data_type • ')'

    ')'  shift, and go to state 135


State 130

   59 conditional: IF '(' conditions ')' '{' stmts_list • '}' else_stmt

    '}'  shift, and go to state 136


State 131

   58 loop: LOOP '(' conditions ')' '{' stmts_list • '}'

    '}'  shift, and go to state 137


State 132

    8 function_name: data_type ID '(' params ')' •

    $default  reduce using rule 8 (function_name)


State 133

   11 param_list: param_list ',' • param

    VOID     shift, and go to state 5
    INT      shift, and go to state 6
    DOUBLE   shift, and go to state 7
    BOOLEAN  shift, and go to state 8
    CHAR     shift, and go to state 9

    param      go to state 138
    data_type  go to state 128


State 134

   13 param: data_type ID • arrayBRACKETS

    $default  reduce using rule 15 (arrayBRACKETS)

    arrayBRACKETS  go to state 139


State 135

   40 RHS: SCAN '(' data_type ')' •

    $default  reduce using rule 40 (RHS)


State 136

   59 conditional: IF '(' conditions ')' '{' stmts_list '}' • else_stmt

    ELSE  shift, and go to state 140

    $default  reduce using rule 61 (else_stmt)

    else_stmt  go to state 141


State 137

   58 loop: LOOP '(' conditions ')' '{' stmts_list '}' •

    $default  reduce using rule 58 (loop)


State 138

   11 param_list: param_list ',' param •

    $default  reduce using rule 11 (param_list)


State 139

   13 param: data_type ID arrayBRACKETS •
   14 arrayBRACKETS: arrayBRACKETS • '[' INT_CONST ']'

    '['  shift, and go to state 60

    $default  reduce using rule 13 (param)


State 140

   60 else_stmt: ELSE • '{' stmts_list '}'

    '{'  shift, and go to state 142


State 141

   59 conditional: IF '(' conditions ')' '{' stmts_list '}' else_stmt •

    $default  reduce using rule 59 (conditional)


State 142

   60 else_stmt: ELSE '{' • stmts_list '}'

    ID        shift, and go to state 2
    IF        shift, and go to state 3
    LOOP      shift, and go to state 4
    VOID      shift, and go to state 5
    INT       shift, and go to state 6
    DOUBLE    shift, and go to state 7
    BOOLEAN   shift, and go to state 8
    CHAR      shift, and go to state 9
    BREAK     shift, and go to state 10
    PRINT     shift, and go to state 11
    RETURN    shift, and go to state 13
    CONTINUE  shift, and go to state 14

    $default  reduce using rule 17 (stmts_list)

    stmts_list     go to state 143
    stmt           go to state 109
    withSemcol     go to state 20
    withoutSemcol  go to state 21
    DECLARATION    go to state 22
    assign_stmt    go to state 23
    LHS            go to state 24
    return_stmt    go to state 25
    printSTMT      go to state 26
    func_call      go to state 27
    loop           go to state 28
    conditional    go to state 29
    data_type      go to state 30


State 143

   60 else_stmt: ELSE '{' stmts_list • '}'

    '}'  shift, and go to state 144


State 144

   60 else_stmt: ELSE '{' stmts_list '}' •

    $default  reduce using rule 60 (else_stmt)
